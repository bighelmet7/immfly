We want to model the Entertainment section of our platform, which displays contents
following a hierarchical structure.
We organize the contents in the platform through the use of Channels. A Channel has a
title, a language, a picture and might contain other subchannels within itself. In case a
channel has no subchannels associated to it, it must contain a set of contents. Contents
can be files such as videos, pdfs, or text, as well as a set of arbitrary metadata
associated with the content (movie director, author, genre, etc.) and a rating value.
In the example (see next page), we follow the path:
Root → Series → Atresplayer → El club de la comedia → El club de la comedia
(Chapter 1)
Contents also have a rating, which is a decimal number between 0 and 10. Channels
can’t store this rating directly (because the structure can change at any time), so we
need a way to compute it from the content structure behind them. The rating of a
channel is the average of the ratings of all the channels underneath, if the channel has
no subchannels, the rating is the average of the ratings of its contents.

The requirements we ask for this test are:
● Create a Django project
● Model the structure defined above
● Create a management command to efficiently calculate the ratings of every
channel and export them in a csv file sorted by rating (i.e. the highest rated
channels on top). The csv contains two columns: <channel title>, <average
rating>
● Create an API to retrieve the channels and the contents
● Add unit tests to test the channel rating algorithm

Get bonus points for:
● Adding CI/CD (Gitlab CI is preferred, but you can use anything you want)
● High test coverage
● Using docker
● Adding Groups to the channels. Considering that each channel can belong to
multiple groups.
○ Allow filtering by group on Channels API.
Note: Take into account that any channel’s groups set should be included in its
parent’s group set
You can use any libraries, DBMS or tools you need to accomplish the task.
Send the repository URL to francesc.lapedriza@immfly.com.
